name: MSBuild

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  
  OSTYPE: Windows

jobs:
  build:
    runs-on: windows-2019
    timeout-minutes: 20

    steps:
    - name: Processor Property
      run: Get-CimInstance -ClassName Win32_Processor | Select-Object -ExcludeProperty "CIM*"

    - name: Checkout github repo (+ download lfs dependencies)
      uses: actions/checkout@v2

    - name: Checkout submodule
      run: |
        git submodule init
        git submodule update

    - name: Install Python with OpenCV
      run: |
        python -m pip install --upgrade pip
        pip install numpy
        pip install opencv-python

    - name: Find OpenCV installation path
      id: find_opencv_path
      run: |
        echo "##[set-output name=opencv_path;]$(python -c "import cv2; import os; print(os.path.dirname(cv2.__file__))")"

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cmake -DOpenCV_DIR=${{ steps.find_opencv_path.outputs.opencv_path }} .
        cmake --build .